/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/articles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          user_id?: parameters["rowFilter.articles.user_id"];
          title?: parameters["rowFilter.articles.title"];
          details?: parameters["rowFilter.articles.details"];
          image?: parameters["rowFilter.articles.image"];
          like_count?: parameters["rowFilter.articles.like_count"];
          comment_count?: parameters["rowFilter.articles.comment_count"];
          created_at?: parameters["rowFilter.articles.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["articles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** articles */
          articles?: definitions["articles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          user_id?: parameters["rowFilter.articles.user_id"];
          title?: parameters["rowFilter.articles.title"];
          details?: parameters["rowFilter.articles.details"];
          image?: parameters["rowFilter.articles.image"];
          like_count?: parameters["rowFilter.articles.like_count"];
          comment_count?: parameters["rowFilter.articles.comment_count"];
          created_at?: parameters["rowFilter.articles.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          user_id?: parameters["rowFilter.articles.user_id"];
          title?: parameters["rowFilter.articles.title"];
          details?: parameters["rowFilter.articles.details"];
          image?: parameters["rowFilter.articles.image"];
          like_count?: parameters["rowFilter.articles.like_count"];
          comment_count?: parameters["rowFilter.articles.comment_count"];
          created_at?: parameters["rowFilter.articles.created_at"];
        };
        body: {
          /** articles */
          articles?: definitions["articles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/categories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          articles_id?: parameters["rowFilter.categories.articles_id"];
          category?: parameters["rowFilter.categories.category"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["categories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** categories */
          categories?: definitions["categories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          articles_id?: parameters["rowFilter.categories.articles_id"];
          category?: parameters["rowFilter.categories.category"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          articles_id?: parameters["rowFilter.categories.articles_id"];
          category?: parameters["rowFilter.categories.category"];
        };
        body: {
          /** categories */
          categories?: definitions["categories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/follows": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.follows.id"];
          user_id?: parameters["rowFilter.follows.user_id"];
          follower_id?: parameters["rowFilter.follows.follower_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["follows"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** follows */
          follows?: definitions["follows"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.follows.id"];
          user_id?: parameters["rowFilter.follows.user_id"];
          follower_id?: parameters["rowFilter.follows.follower_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.follows.id"];
          user_id?: parameters["rowFilter.follows.user_id"];
          follower_id?: parameters["rowFilter.follows.follower_id"];
        };
        body: {
          /** follows */
          follows?: definitions["follows"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/likes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.likes.id"];
          user_id?: parameters["rowFilter.likes.user_id"];
          articles_id?: parameters["rowFilter.likes.articles_id"];
          created_at?: parameters["rowFilter.likes.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["likes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** likes */
          likes?: definitions["likes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.likes.id"];
          user_id?: parameters["rowFilter.likes.user_id"];
          articles_id?: parameters["rowFilter.likes.articles_id"];
          created_at?: parameters["rowFilter.likes.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.likes.id"];
          user_id?: parameters["rowFilter.likes.user_id"];
          articles_id?: parameters["rowFilter.likes.articles_id"];
          created_at?: parameters["rowFilter.likes.created_at"];
        };
        body: {
          /** likes */
          likes?: definitions["likes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/my_articles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.my_articles.id"];
          user_id?: parameters["rowFilter.my_articles.user_id"];
          image?: parameters["rowFilter.my_articles.image"];
          title?: parameters["rowFilter.my_articles.title"];
          details?: parameters["rowFilter.my_articles.details"];
          like_count?: parameters["rowFilter.my_articles.like_count"];
          comment_count?: parameters["rowFilter.my_articles.comment_count"];
          created_at?: parameters["rowFilter.my_articles.created_at"];
          categories?: parameters["rowFilter.my_articles.categories"];
          username?: parameters["rowFilter.my_articles.username"];
          avatar?: parameters["rowFilter.my_articles.avatar"];
          likes_id?: parameters["rowFilter.my_articles.likes_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["my_articles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          username?: parameters["rowFilter.profiles.username"];
          avatar?: parameters["rowFilter.profiles.avatar"];
          details?: parameters["rowFilter.profiles.details"];
          follow_count?: parameters["rowFilter.profiles.follow_count"];
          follower_count?: parameters["rowFilter.profiles.follower_count"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          username?: parameters["rowFilter.profiles.username"];
          avatar?: parameters["rowFilter.profiles.avatar"];
          details?: parameters["rowFilter.profiles.details"];
          follow_count?: parameters["rowFilter.profiles.follow_count"];
          follower_count?: parameters["rowFilter.profiles.follower_count"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          username?: parameters["rowFilter.profiles.username"];
          avatar?: parameters["rowFilter.profiles.avatar"];
          details?: parameters["rowFilter.profiles.details"];
          follow_count?: parameters["rowFilter.profiles.follow_count"];
          follower_count?: parameters["rowFilter.profiles.follower_count"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/on_insert_articles": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            qid: string;
            /** Format: character varying */
            details: string;
            /** Format: character varying */
            title: string;
            /** Format: text */
            image: string;
            /** Format: smallint[] */
            categories: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  articles: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     * @default auth.uid()
     */
    user_id: string;
    /** Format: character varying */
    title: string;
    /** Format: character varying */
    details: string;
    /** Format: text */
    image?: string;
    /**
     * Format: integer
     * @default 0
     */
    like_count: number;
    /**
     * Format: integer
     * @default 0
     */
    comment_count: number;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    created_at: string;
  };
  categories: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `articles.id`.<fk table='articles' column='id'/>
     */
    articles_id: string;
    /** Format: smallint */
    category: number;
  };
  follows: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     * @default auth.uid()
     */
    user_id?: string;
    /** Format: uuid */
    follower_id: string;
  };
  likes: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     * @default auth.uid()
     */
    user_id?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `articles.id`.<fk table='articles' column='id'/>
     */
    articles_id?: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    created_at: string;
  };
  my_articles: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id?: string;
    /** Format: text */
    image?: string;
    /** Format: character varying */
    title?: string;
    /** Format: text */
    details?: string;
    /** Format: integer */
    like_count?: number;
    /** Format: integer */
    comment_count?: number;
    /** Format: timestamp without time zone */
    created_at?: string;
    /** Format: ARRAY */
    categories?: unknown[];
    /** Format: character varying */
    username?: string;
    /** Format: text */
    avatar?: string;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    likes_id?: number;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: character varying
     * @default 新しいユーザー
     */
    username: string;
    /** Format: text */
    avatar?: string;
    /** Format: character varying */
    details?: string;
    /**
     * Format: integer
     * @default 0
     */
    follow_count: number;
    /**
     * Format: integer
     * @default 0
     */
    follower_count: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description articles */
  "body.articles": definitions["articles"];
  /** Format: character varying */
  "rowFilter.articles.id": string;
  /** Format: uuid */
  "rowFilter.articles.user_id": string;
  /** Format: character varying */
  "rowFilter.articles.title": string;
  /** Format: character varying */
  "rowFilter.articles.details": string;
  /** Format: text */
  "rowFilter.articles.image": string;
  /** Format: integer */
  "rowFilter.articles.like_count": string;
  /** Format: integer */
  "rowFilter.articles.comment_count": string;
  /** Format: timestamp without time zone */
  "rowFilter.articles.created_at": string;
  /** @description categories */
  "body.categories": definitions["categories"];
  /** Format: integer */
  "rowFilter.categories.id": string;
  /** Format: character varying */
  "rowFilter.categories.articles_id": string;
  /** Format: smallint */
  "rowFilter.categories.category": string;
  /** @description follows */
  "body.follows": definitions["follows"];
  /** Format: integer */
  "rowFilter.follows.id": string;
  /** Format: uuid */
  "rowFilter.follows.user_id": string;
  /** Format: uuid */
  "rowFilter.follows.follower_id": string;
  /** @description likes */
  "body.likes": definitions["likes"];
  /** Format: integer */
  "rowFilter.likes.id": string;
  /** Format: uuid */
  "rowFilter.likes.user_id": string;
  /** Format: character varying */
  "rowFilter.likes.articles_id": string;
  /** Format: timestamp without time zone */
  "rowFilter.likes.created_at": string;
  /** @description my_articles */
  "body.my_articles": definitions["my_articles"];
  /** Format: character varying */
  "rowFilter.my_articles.id": string;
  /** Format: uuid */
  "rowFilter.my_articles.user_id": string;
  /** Format: text */
  "rowFilter.my_articles.image": string;
  /** Format: character varying */
  "rowFilter.my_articles.title": string;
  /** Format: text */
  "rowFilter.my_articles.details": string;
  /** Format: integer */
  "rowFilter.my_articles.like_count": string;
  /** Format: integer */
  "rowFilter.my_articles.comment_count": string;
  /** Format: timestamp without time zone */
  "rowFilter.my_articles.created_at": string;
  /** Format: ARRAY */
  "rowFilter.my_articles.categories": string;
  /** Format: character varying */
  "rowFilter.my_articles.username": string;
  /** Format: text */
  "rowFilter.my_articles.avatar": string;
  /** Format: integer */
  "rowFilter.my_articles.likes_id": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: character varying */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar": string;
  /** Format: character varying */
  "rowFilter.profiles.details": string;
  /** Format: integer */
  "rowFilter.profiles.follow_count": string;
  /** Format: integer */
  "rowFilter.profiles.follower_count": string;
}

export interface operations {}

export interface external {}
